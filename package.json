{
  "name": "vscode-jq-playground",
  "displayName": "Visual Code jq playground",
  "description": "Visual Code integration with jq",
  "version": "4.3.5",
  "publisher": "davidnussio",
  "license": "SEE LICENSE IN LICENSE",
  "author": {
    "name": "David Nussio",
    "email": "david.nussio@gmail.com"
  },
  "icon": "icon.png",
  "galleryBanner": {
    "color": "#000000",
    "theme": "dark"
  },
  "bugs": {
    "url": "https://github.com/davidnussio/vscode-jq-playground/issues",
    "email": "david.nussio@gmail.com"
  },
  "homepage": "https://github.com/davidnussio/vscode-jq-playground/blob/master/README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/davidnussio/vscode-jq-playground.git"
  },
  "engines": {
    "vscode": "^1.70.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "JSON",
    "query"
  ],
  "activationEvents": [
    "onLanguage:jqpg",
    "onLanguage:jq",
    "onCommand:extension.openExamples",
    "onCommand:extension.openManual",
    "onCommand:extension.openTutorial",
    "onCommand:extension.openPlay",
    "onCommand:extension.runQueryOutput",
    "onCommand:extension.runQueryEditor",
    "onCommand:extension.executeJqInputCommand",
    "onCommand:extension.createJqpgFromFilter",
    "onCommand:extension.jqpgFromFilter"
  ],
  "main": "./dist/extension",
  "contributes": {
    "configuration": {
      "title": "JQ playground configuration",
      "properties": {
        "jqPlayground.binaryPath": {
          "type": "string",
          "default": "",
          "description": "Specifies the folder path to jq binary. (/home/user/bin/jq). Leaves empty to automatically download from github.",
          "scope": "application"
        }
      }
    },
    "languages": [
      {
        "id": "jqpg",
        "extensions": [
          ".jqpg",
          ".jq"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "jqpg",
        "scopeName": "source.jqpg",
        "path": "./syntaxes/jq.tmLanguage.json",
        "embeddedLanguages": {
          "source.jq": "jq",
          "source.json": "json"
        }
      }
    ],
    "commands": [
      {
        "command": "extension.openManual",
        "title": "Manual",
        "category": "JQPG"
      },
      {
        "command": "extension.openTutorial",
        "title": "Tutorial",
        "category": "JQPG"
      },
      {
        "command": "extension.openExamples",
        "title": "Examples",
        "category": "JQPG"
      },
      {
        "command": "extension.runQueryOutput",
        "title": "Run query in output",
        "category": "JQPG"
      },
      {
        "command": "extension.runQueryEditor",
        "title": "Run query in editor",
        "category": "JQPG"
      },
      {
        "command": "extension.createJqpgFromFilter",
        "title": "Create playground from filter",
        "category": "JQPG"
      },
      {
        "command": "extension.jqpgFromFilter",
        "title": "Execute jq filter",
        "category": "JQPG"
      }
    ],
    "keybindings": [
      {
        "command": "extension.runQueryOutput",
        "key": "ctrl+enter",
        "mac": "cmd+enter",
        "when": "editorTextFocus && editorLangId == 'jqpg'"
      },
      {
        "command": "extension.runQueryEditor",
        "key": "shift+enter",
        "mac": "shift+enter",
        "when": "editorTextFocus && editorLangId == 'jqpg'"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "webpack": "webpack --mode development",
    "webpack-dev": "webpack --mode development --watch",
    "generate:download": "node ./internals/download-manual.js",
    "generate:examples": "node ./internals/build-examples.js",
    "generate:autocomplete": "node ./internals/build-autocomplete.js",
    "generate:builtins": "jq -n 'builtins | sort | map(split(\"/\")[0]) | unique | map( { (.): {\"documentation\": \"\"} }) | add' > ./files/builtins.json",
    "generate:all": "rm -rf files/*; npm run generate:download && npm run generate:builtins && npm run generate:examples && npm run generate:autocomplete",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "test": "node ./out/test/runTest.js",
    "test:watch": "jest --watch"
  },
  "devDependencies": {
    "@babel/core": "^7.20.5",
    "@babel/preset-env": "^7.20.2",
    "@babel/preset-typescript": "^7.18.6",
    "@types/glob": "8.0.0",
    "@types/jest": "^29.2.3",
    "@types/node": "^18.11.9",
    "@types/ramda": "^0.28.20",
    "@types/vscode": "^1.70.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "babel-jest": "^29.3.1",
    "clean-webpack-plugin": "^4.0.0",
    "eslint": "^8.28.0",
    "eslint-config-airbnb-typescript": "^17.0.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jest": "^27.1.6",
    "eslint-plugin-prettier": "^4.2.1",
    "glob": "^8.0.3",
    "jest": "^29.3.1",
    "lint-staged": "^13.0.4",
    "simple-git-hooks": "^2.8.1",
    "terser-webpack-plugin": "^5.3.6",
    "ts-jest": "^29.0.3",
    "ts-loader": "^9.4.1",
    "typescript": "^4.9.3",
    "webpack": "^5.75.0",
    "webpack-cli": "^5.0.0",
    "yaml": "^2.1.3"
  },
  "dependencies": {
    "crocks": "^0.12.4",
    "eyes": "^0.1.8",
    "md5-file": "^5.0.0",
    "node-fetch": "3.3.0",
    "ramda": "0.28.0",
    "shell-quote": "1.7.4",
    "which": "3.0.1"
  },
  "extensionDependencies": [
    "jq-syntax-highlighting.jq-syntax-highlighting"
  ],
  "jest": {
    "modulePathIgnorePatterns": [
      "<rootDir>/src/test/"
    ]
  },
  "prettier": {
    "semi": true,
    "singleQuote": false,
    "printWidth": 80,
    "trailingComma": "all"
  },
  "simple-git-hooks": {
    "pre-commit": "npx lint-staged"
  },
  "lint-staged": {
    "*.ts": "eslint --cache --fix"
  }
}
